<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <assignments>
        <name>Set_BreakLoop_to_false</name>
        <label>Set BreakLoop to false</label>
        <locationX>886</locationX>
        <locationY>935</locationY>
        <assignmentItems>
            <assignToReference>BreakLoop</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Invoice_Lines</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_BreakLoop_to_true</name>
        <label>Set BreakLoop to true</label>
        <locationX>974</locationX>
        <locationY>1415</locationY>
        <assignmentItems>
            <assignToReference>BreakLoop</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Invoice_Lines</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Take_Note_Value</name>
        <label>Take Note Value</label>
        <locationX>270</locationX>
        <locationY>935</locationY>
        <assignmentItems>
            <assignToReference>Notes</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NoteFormula</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_to_check_Notes</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Take_Note_Value_0</name>
        <label>Take Note Value</label>
        <locationX>974</locationX>
        <locationY>1295</locationY>
        <assignmentItems>
            <assignToReference>Notes</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NoteFormula</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_BreakLoop_to_true</targetReference>
        </connector>
    </assignments>
    <constants>
        <name>BrakeLine</name>
        <dataType>String</dataType>
        <value>
            <stringValue>|</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Check_Notes_Populated</name>
        <label>Check Notes Populated</label>
        <locationX>182</locationX>
        <locationY>1919</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Notes</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Invoice</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_order</name>
        <label>Check order</label>
        <locationX>1106</locationX>
        <locationY>1175</locationY>
        <defaultConnector>
            <targetReference>Loop_Invoice_Lines</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_ok</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_to_check_Notes.Order__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Loop_Invoice_Lines.blng__OrderProduct__r.OrderId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>BreakLoop</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Take_Note_Value_0</targetReference>
            </connector>
            <label>Check ok</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Order_and_Account</name>
        <label>Check Order and Account</label>
        <locationX>578</locationX>
        <locationY>815</locationY>
        <defaultConnector>
            <targetReference>Set_BreakLoop_to_false</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Notes at order level</defaultConnectorLabel>
        <rules>
            <name>Yes_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_to_check_Notes.Account__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.blng__Account__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_to_check_Notes.Order__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Take_Note_Value</targetReference>
            </connector>
            <label>Notes at account level</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_found_notes</name>
        <label>Has found notes?</label>
        <locationX>380</locationX>
        <locationY>455</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Notes</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Invoice_Lines</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>NoteFormula</name>
        <dataType>String</dataType>
        <expression>{!Notes} &amp; {!Loop_to_check_Notes.Note__c} &amp; {!BrakeLine}</expression>
    </formulas>
    <interviewLabel>Invoice - Set Notes {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Invoice - Set Notes</label>
    <loops>
        <name>Loop_Invoice_Lines</name>
        <label>Loop Invoice Lines</label>
        <locationX>886</locationX>
        <locationY>1055</locationY>
        <collectionReference>Get_Invoice_Lines</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_order</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Loop_to_check_Notes</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_to_check_Notes</name>
        <label>Loop to check Notes</label>
        <locationX>182</locationX>
        <locationY>695</locationY>
        <collectionReference>Get_Notes</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_Order_and_Account</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Check_Notes_Populated</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Invoice_Lines</name>
        <label>Get Invoice Lines</label>
        <locationX>182</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_to_check_Notes</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>blng__Invoice__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>blng__InvoiceLine__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Notes</name>
        <label>Get Notes</label>
        <locationX>380</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Has_found_notes</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.blng__Account__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>End_Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Start_Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Invoice_Note__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Invoice</name>
        <label>Update Invoice</label>
        <locationX>50</locationX>
        <locationY>2039</locationY>
        <inputAssignments>
            <field>blng__Notes__c</field>
            <value>
                <elementReference>Notes</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Notes</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>blng__InvoiceStatus__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Posted</stringValue>
            </value>
        </filters>
        <filters>
            <field>blng__Notes__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>blng__Invoice__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>BreakLoop</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>currentItem_Filtra</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Invoice_Note__c</objectType>
    </variables>
    <variables>
        <name>Notes</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
